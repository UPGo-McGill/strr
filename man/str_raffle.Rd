% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_raffle.R
\name{str_raffle}
\alias{str_raffle}
\title{Raffle to assign STR listings to administrative units for spatial analysis}
\usage{
str_raffle(points, polys, poly_ID, units, distance = 200,
  diagnostic = FALSE, cores = 1)
}
\arguments{
\item{points}{An sf or sp point-geometry object, in a projected coordinate
system.}

\item{polys}{An sf or sp polygon-geometry object with administrative
geographies as polygons. It will be transformed into the CRS of `points`.}

\item{poly_ID}{The name of a character or numeric variable in the polys
object to be used as an ID to identify the "winning" polygon assigned to
each point in the output.}

\item{units}{The name of a numeric variable in the polys object which
contains the weighting factor (number of people or housing units).}

\item{distance}{A numeric scalar. The radius (in the units of the CRS) of the
buffer which will be drawn around points to determine possible listing
locations.}

\item{diagnostic}{A logical scalar. Should a list of polygon candidates and
associated probabilities be appended to the function output?}

\item{cores}{A positive integer scalar. How many processing cores should be
used to perform the computationally intensive numeric integration step?}
}
\value{
The output will be the input points object with a new `winner` field
  appended. The `winner` field specifies which polygon from the polys object
  was probabilistically assigned to the listing, using the field identified
  in the `poly_ID` argument. If diagnostic == TRUE, a `candidates` field will
  also be appended, which lists the possible polygons for each point, along
  with their probabilities.
}
\description{
\code{str_raffle} takes reported STR listing locations and assigns the
listings to administrative units based on a probability density function and
other information about population or housing distribution.
}
\details{
A function for probablistically assigning STR listings to administrative
geographies (e.g. census tracts) based on reported latitude/longitude.
The function works by combining a known probability density function (e.g.
Airbnb's spatial obfuscation of listing locations) with an additional source
of information about possible listing locations--either population or housing
densities.
}
