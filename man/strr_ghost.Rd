% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strr_ghost.R
\name{strr_ghost}
\alias{strr_ghost}
\title{Function to identify STR ghost hotels}
\usage{
strr_ghost(points, property_ID, host_ID, created, scraped, start_date,
  end_date, distance = 200, min_listings = 3, listing_type = NULL,
  private_room = "Private room", cores = 1)
}
\arguments{
\item{points}{A data frame of STR listings with sf or sp point geometries in
a projected coordinate system.}

\item{property_ID}{The name of a character or numeric variable in the points
object which uniquely identifies STR listings.}

\item{host_ID}{The name of a character or numeric variable in the points
object which uniquely identifies STR hosts.}

\item{created}{The name of a date variable in the points object which gives
the creation date for each listing.}

\item{scraped}{The name of a date variable in the points object which gives
the last-scraped date for each listing.}

\item{start_date}{A character string of format YYYY-MM-DD indicating the
first date for which to run the analysis.}

\item{end_date}{A character string of format YYYY-MM-DD indicating the last
date for which to run the analysis.}

\item{distance}{A numeric scalar. The radius (in the units of the CRS) of the
buffer which will be drawn around points to determine possible ghost hotel
locations.}

\item{min_listings}{A numeric scalar. The minimum number of listings to
be considered a ghost hotel.}

\item{listing_type}{The name of a character variable in the points
object which identifies private-room listings. If NULL, all listings will
be used.}

\item{private_room}{A character string which identifies the value of the
listing_type variable to be used to find ghost hotels.}

\item{cores}{A positive integer scalar. How many processing cores should be
used to perform the computationally intensive intersection step?}
}
\value{
The output will be a tidy data frame of identified ghost hotels,
  organized with the following fields: `ghost_ID`: an identifier for each
  unique ghost hotel cluster. `date`: the date on which the ghost hotel was
  detected. `host_ID` (or whatever name was passed to the host_ID argument):
  The ID number of the host operating the ghost hotel. `listing_count`: how
  many separate listings comprised the ghost hotel. `housing_units`: an
  estimate of how many housing units the ghost hotel occupies, calculated as
  `ceiling(listing_count / 4)`. `property_IDs`: A list of the property_ID
  (or whatever name was passed to the property_ID argument) values from the
  listings comprising the ghost hotel. `data`: a nested tibble of additional
  variables present in the points object. `geometry`: the polygons
  representing the possible locations of each ghost hotel.
}
\description{
\code{strr_ghost} takes reported STR listing locations and identifies
possible "ghost hotels"--clusters of private-room STR listings operating in a
single building.
}
\details{
A function for probablistically assigning STR listings to administrative
geographies (e.g. census tracts) based on reported latitude/longitude.
The function works by combining a known probability density function (e.g.
Airbnb's spatial obfuscation of listing locations) with an additional source
of information about possible listing locations--either population or housing
densities.
}
